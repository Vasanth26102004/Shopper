/**
 * Simple wrapper of event bus.
 */
export declare class EventBus {
    listeners: Record<string, ((...args: any[]) => any)[]>;
    constructor();
    on(event: string, listener: (...args: any[]) => any): {
        remove: () => void;
    };
    once(event: string, listener: (...args: any[]) => any): {
        remove: () => void;
    };
    off(event: string, listener?: (...args: any[]) => any): void;
    emit(event: string, ...args: any[]): void;
}
declare const _default: EventBus;
export default _default;
